code-body: yes
created: 20230324160845531
modified: 20230625202117880
tags: $:/tags/Macro
title: $:/plugins/wikilabs/trails/trails-macros
type: text/vnd.tiddlywiki

\define tr-link(title, class)
\whitespace trim
<li class=<<__class__>> >
<$link to=<<__title__>> >
	<$macrocall $name="tr-caption" title=<<__title__>> />
</$link>
</li>
\end

\define tr-caption(title)
\whitespace trim
<$let name="tv-wikilinks" value="no">
	<$view tiddler=<<__title__>> field="caption" format="plainwikified">
		<$transclude tiddler=<<__title__>> field="title"/>
	</$view>
</$let>
\end

<!-- ================================================================ -->
<!-- "trail" is a wrapper for global mode switching -->
<!-- "mode" defaults to "story", which will recreate the hierarchy also in the story river -->
<!-- It uses a list-like field, which defaults to "tags" as the start of the hierarchy -->

\define trail(start, stop, exclude, label, field, sort, mode:"story")
\whitespace trim
<$let __start__={{{ [<__start__>match[]then<currentTiddler>else<__start__>] }}}
	tr-name={{{ "trail" [<__mode__>titlecase[]] +[join[]] }}}
>
	<$set name="excluded" filter="[subfilter<__exclude__>] :or[<__start__>]">
		<$macrocall $name=<<tr-name>> start=<<__start__>> stop=<<__stop__>> exclude=<<excluded>> label=<<__label__>> field=<<__field__>> sort=<<__sort__>>/>
	</$set>
</$let>
\end

<!-- ========================================================================= -->
<!-- "trailStory" uses a list-like field (default: tags) and -->
<!-- it will retain the hierarchical order in the story river -->

\define openInStoryActions()
<$set name=visited filter="[enlist<excluded>order[reverse]]" >
<$let __source__={{{ [list[$:/StoryList]] :intersection[enlist<visited>] +[nth[1]] }}} >
	<$set name="newList" filter="[list[$:/StoryList]insertbefore<__target__>,<__source__>]">
		<$action-setfield $tiddler="$:/StoryList" $field="list" $value=<<newList>> />
		<$action-navigate $to=<<__target__>> />
	</$set>
<$let>
</$set>
\end

\define openInStory(target, source, class)
\whitespace trim
<$linkcatcher actions=<<openInStoryActions>> >
	<$macrocall $name="tr-link" title=<<__target__>> class=<<__class__>>/>
</$linkcatcher>
\end

\define trFirstCrumb()
<$macrocall $name="openInStory" target=<<next>> source=<<__current__>> class="tc-small-gap-right wltc-crumb-first"/>
\end

\define trRecursionStory(current, stop, exclude, field:"tags", sort:"yes")
\whitespace trim
<$list filter="[<__stop__>is[tiddler]]" emptyMessage="""<span style={{{ [{$:/palette}getindex[dirty-indicator]addprefix[color:]addsuffix[;]] }}}> trail ERROR! -- stop-tiddler: "<<__stop__>>" does not exist</span>""" variable="ignore">
	<$let
		limit="[limit[1]]"
		sort="[sort[]limit[1]]"
		sub={{{ [<__sort__>match[yes]then<sort>else<limit>] }}}
		next={{{ [<__current__>get<__field__>enlist-input[]] -[enlist<__exclude__>] +[subfilter<sub>] :else[<__stop__>] }}}
	>
		<$set name="excluded" filter="[subfilter<__exclude__>] :or[<next>]">
			<$list filter="[<next>!match<__stop__>]" emptyMessage=<<trFirstCrumb>> >
				<$macrocall $name="trRecursionStory" current=<<currentTiddler>> stop=<<__stop__>> exclude=<<excluded>> field=<<__field__>> filter=<<__filter__>>/>
				<$macrocall $name="openInStory" target=<<currentTiddler>> source=<<__current__>> class="tc-small-gap-right wltc-crumb"/>
			</$list>
		</$set>
	</$let>
</$list>
\end

\define trailStory(start, stop, exclude, label, field, sort)
\whitespace trim
<$let __start__={{{ [<__start__>match[]then<currentTiddler>else<__start__>] }}} selfTiddler=<<currentTiddler>> >
	<$set name="excluded" filter="[subfilter<__exclude__>] :or[<__start__>]">
		<nav class="wltc-trail" aria-label=<<__start__>> >
			<div class="wltc-label"><<__label__>></div>
			<ol>
				<$macrocall $name="trRecursionStory" current=<<__start__>> stop=<<__stop__>> exclude=<<excluded>> field=<<__field__>> sort=<<__sort__>>/>
				<li tabindex="0" aria-current="location" class="wltc-crumb" aria-label={{{ [<__start__>get[caption]else<__start__>]}}} >
					<$macrocall $name="tr-caption" title=<<__start__>> />
				</li>
			</ol>
		</nav>
	</$set>
</$let>
\end

<!-- ========================================================================= -->
<!-- "trailField" uses a field (defaults to "list") as the trail source. -->
<!-- start is a tiddler title (defaults to "currentTiddler") -->

\define openFieldInStoryActions()
<$set name=visited filter="[<__start__>get<__field__>enlist-input[]] -[enlist<excluded>] +[allafter<__target__>] :or[<__start__>]" >
<$let __source__={{{ [list[$:/StoryList]] :intersection[enlist<visited>] +[nth[1]] }}} >
	<$set name="newList" filter="[list[$:/StoryList]insertbefore<__target__>,<__source__>]">
		<$action-setfield $tiddler="$:/StoryList" $field="list" $value=<<newList>> />
		<$action-navigate $to=<<__target__>> />
	</$set>
<$let>
</$set>
\end

\define openFieldInStory(target, class)
\whitespace trim
<$linkcatcher actions=<<openFieldInStoryActions>> >
	<$macrocall $name="tr-link" title=<<__target__>> class=<<__class__>>/>
</$linkcatcher>
\end

\define trailField(start, exclude, label, field:"list")
\whitespace trim
<$let __start__={{{ [<__start__>match[]then<currentTiddler>else<__start__>] }}}
	first={{{ [<__start__>get<__field__>enlist-input[]] }}}
>
	<$set name="excluded" filter="[subfilter<__exclude__>]">
		<nav aria-label=<<__start__>> class="wltc-trail">
			<div class="wltc-label"><<__label__>></div>
			<ol>
				<$macrocall $name="openFieldInStory" target=<<first>> class="wltc-crumb-first"/>
				<$list filter="[<__start__>get<__field__>enlist-input[]] -[enlist<excluded>] -[<first>]">
					<$macrocall $name="openFieldInStory" target=<<currentTiddler>> class="tc-small-gap-right wltc-crumb"/>
				</$list>
				<li tabindex="0" aria-current="location" class="wltc-crumb" aria-label={{{ [<__start__>get[caption]else<__start__>]}}}>
					<$macrocall $name="tr-caption" title=<<__start__>> />
				</li>
			</ol>
		</nav>
	</$set>
</$let>
\end

<!-- ========================================================================= -->
<!-- "trailSimple" uses a list-like field (default: tags) as the start of the hierarchy -->
<!-- Links will be opened according to wiki global "open link in story-river" setting -->

\define trRecursion(current, stop, exclude, field:"tags", sort:"yes")
\whitespace trim
<$list filter="[<__stop__>is[tiddler]]" emptyMessage="""<span style={{{ [{$:/palette}getindex[dirty-indicator]addprefix[color:]addsuffix[;]] }}}> trail ERROR! -- stop-tiddler: "<<__stop__>>" does not exist</span>""" variable="ignore">
	<$let
		limit="[limit[1]]"
		sort="[sort[]limit[1]]"
		sub={{{ [<__sort__>match[yes]then<sort>else<limit>] }}}
		next={{{ [<__current__>get<__field__>enlist-input[]] -[enlist<__exclude__>] +[subfilter<sub>] :else[<__stop__>] }}}
	>
		<$set name="excluded" filter="[subfilter<__exclude__>] :or[<next>]">
			<$list filter="[<next>!match<__stop__>]" emptyMessage="""<$macrocall $name="tr-link" title=<<next>> class="tc-small-gap-right wltc-crumb-first"/>""">
				<$macrocall $name="trRecursion" current=<<currentTiddler>> stop=<<__stop__>> exclude=<<excluded>> field=<<__field__>> filter=<<__filter__>>/>
				<$macrocall $name="tr-link" title=<<currentTiddler>> class="tc-small-gap-right wltc-crumb"/>
			</$list>
		</$set>
	</$let>
</$list>
\end

\define trailSimple(start, stop, exclude, label, field, sort)
\whitespace trim
<$let __start__={{{ [<__start__>match[]then<currentTiddler>else<__start__>] }}} >
	<$set name="excluded" filter="[subfilter<__exclude__>] :or[<__start__>]">
	<nav class="wltc-trail">
		<div class="wltc-label"><<__label__>></div>
		<ol>
			<$macrocall $name="trRecursion" current=<<__start__>> stop=<<__stop__>> exclude=<<excluded>> field=<<__field__>> sort=<<__sort__>>/>
			<li tabindex="0" aria-current="location" class="wltc-crumb" aria-label={{{ [<__start__>get[caption]else<__start__>]}}}>
				<$macrocall $name="tr-caption" title=<<__start__>> />
			</li>
		</ol>
	</nav>
	</$set>
</$let>
\end
